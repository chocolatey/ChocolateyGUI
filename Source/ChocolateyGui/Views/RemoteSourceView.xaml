<UserControl x:Class="ChocolateyGui.Views.RemoteSourceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commands="clr-namespace:ChocolateyGui.Commands"
             xmlns:controls="clr-namespace:ChocolateyGui.Controls"
             xmlns:enums="clr-namespace:ChocolateyGui.Enums"
             xmlns:models="clr-namespace:ChocolateyGui.Models"
             xmlns:viewModels="clr-namespace:ChocolateyGui.ViewModels"
             xmlns:items="clr-namespace:ChocolateyGui.ViewModels.Items"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:lang="clr-namespace:ChocolateyGui.Properties"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d"
             d:DesignHeight="768" d:DesignWidth="1366"
             d:DataContext="{d:DesignInstance viewModels:RemoteSourceViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <models:EnumToBoolConverter x:Key="EnumToBoolConverter" />

            <DataTemplate x:Key="PackageListTemplate" DataType="{x:Type items:IPackageViewModel}">
                <DataTemplate.Resources>
                    <Style x:Key="ColoredDetailsText" TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource AccentBaseColorBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataTemplate.Resources>

                <Grid x:Name="PackageDetailsGrid" Height="105" Margin="5"
                      HorizontalAlignment="Stretch"
                      Background="Transparent"
                      ContextMenu="{StaticResource PackagesContextMenu}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid x:Name="PART_Top" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="TitleVersion" Grid.Row="0" Grid.Column="0"
                                   TextTrimming="CharacterEllipsis"
                                   Style="{StaticResource ColoredDetailsText}" FontSize="26">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="Title" Mode="OneWay" />
                                    <Binding Path="Version" Mode="OneWay" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" IsHitTestVisible="False">
                            <TextBlock FontSize="14" Text="{x:Static lang:Resources.RemoteSourceView_Authors}" />
                            <TextBlock FontSize="14" Margin="5 0 0 0" Text="{Binding Authors, Mode=OneWay, Converter={StaticResource StringListToString}}"
                                       TextTrimming="CharacterEllipsis"
                                       AutomationProperties.Name="{Binding Authors, Mode=OneWay, Converter={StaticResource StringListToString}}"
                                       Style="{StaticResource ColoredDetailsText}" />
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" IsHitTestVisible="False"
                                    Visibility="{Binding IsDownloadCountAvailable, Converter={StaticResource BoolToVis}}">
                            <TextBlock FontWeight="SemiBold" FontSize="20" Text="{Binding DownloadCount, Mode=OneWay, StringFormat=N0}" Style="{StaticResource ColoredDetailsText}" VerticalAlignment="Center" />
                            <iconPacks:PackIconFontAwesome Kind="Download" Width="16" Height="16" Margin="5 1 0 0" VerticalAlignment="Center" />
                        </StackPanel>
                    </Grid>

                    <Grid x:Name="PART_Body" Grid.Row="1">
                        <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Description, Mode=OneWay}"/>
                    </Grid>

                    <Grid x:Name="PART_Bottom" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal" IsHitTestVisible="False">
                            <TextBlock x:Name="TagsLabel" FontSize="14" Text="{x:Static lang:Resources.Controls_PackageListTags}" />
                            <TextBlock x:Name="Tags" FontSize="14" Margin="5 0 0 0" Text="{Binding Tags, Mode=OneWay}"
                                       TextTrimming="CharacterEllipsis"
                                       AutomationProperties.Name="{Binding Tags, Mode=OneWay, Converter={StaticResource StringListToString}}"
                                       Style="{StaticResource ColoredDetailsText}" />
                        </StackPanel>
                        <iconPacks:PackIconEntypo Grid.Column="1" Kind="Check" Width="16" Height="16" VerticalAlignment="Center" Visibility="{Binding IsInstalled, Mode=OneWay, Converter={StaticResource BooleanToVisibility}}" />
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="PackageTileTemplate" DataType="{x:Type items:IPackageViewModel}">
                <Grid Width="180" Height="180"
                      Background="Transparent"
                      ContextMenu="{StaticResource PackagesContextMenu}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <controls:InternetImage Grid.Row="0"
                                            AutomationProperties.Name="Package Icon"
                                            IconUrl="{Binding IconUrl, IsAsync=True}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Height="100"/>

                    <iconPacks:PackIconEntypo Grid.Row="0" Grid.RowSpan="3"
                                              Opacity="0.8"
                                              Width="24" Height="24"
                                              Kind="Pin" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2 4"
                                              Visibility="{Binding IsPinned, Mode=OneWay, Converter={StaticResource BoolToVis}}" />

                    <ContentControl x:Name="IsInstalledOverlay" ClipToBounds="True" Grid.Row="0" Grid.RowSpan="3" Visibility="Collapsed"
                                    IsTabStop="False"
                                    Focusable="False"
                                    Content="{x:Static lang:Resources.RemoteSourceView_OverlayInstalled}"
                                    Background="#007F00"
                                    Foreground="White"
                                    Template="{DynamicResource TileOverlayTemplate}" />

                    <ContentControl x:Name="OutOfDateOverlay" ClipToBounds="True" Grid.Row="0" Grid.RowSpan="3" Visibility="Collapsed"
                                    IsTabStop="False"
                                    Focusable="False"
                                    Content="{x:Static lang:Resources.RemoteSourceView_OverlayOutdated}"
                                    Background="#A90000"
                                    Foreground="White"
                                    Template="{DynamicResource TileOverlayTemplate}" />

                    <TextBlock Grid.Row="1"
                               Margin="4 0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis"
                               FontSize="14"
                               FontWeight="Bold"
                               Text="{Binding Title}" />
                    <TextBlock Grid.Row="2"
                               Margin="4 1 4 4"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis"
                               FontSize="14"
                               Text="{Binding Version}" />
                </Grid>

                <DataTemplate.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsInstalled, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding IsLatestVersion, Mode=OneWay}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="IsInstalledOverlay" Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsInstalled, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding IsLatestVersion, Mode=OneWay}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter TargetName="OutOfDateOverlay" Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource VirtualisedMetroListView}">
                <Style.Resources>
                    <!--  this is necessary to prevent nasty can not find stuff like  -->
                    <!--  ItemsPanel Cannot find source for binding with reference 'RelativeSource FindAncestor, AncestorType='System.Windows.Controls.ItemsControl', AncestorLevel='1''. BindingExpression:Path=HorizontalContentAlignment; DataItem=null; target element is 'ListViewItem' (Name=''); target property is 'HorizontalContentAlignment' (type 'HorizontalAlignment')  -->
                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}" />
                </Style.Resources>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}" />
                <Setter Property="ItemTemplate" Value="{StaticResource PackageListTemplate}" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ListViewMode, Mode=OneWay}" Value="{x:Static enums:ListViewMode.Tile}">
                        <Setter Property="ItemTemplate" Value="{StaticResource PackageTileTemplate}" />
                        <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemTileStyle}" />
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" VirtualizingPanel.IsVirtualizing="{TemplateBinding VirtualizingPanel.IsVirtualizing}" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{StaticResource AccentColorBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <WrapPanel Grid.Column="0" Orientation="Horizontal" Margin="0,5" Style="{StaticResource LeftSourceListItem}">
                <StackPanel Orientation="Horizontal" Margin="0 0 5 0">
                    <Label Margin="5,0" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"
                           Target="{Binding ElementName=SearchTextBox}" Content="{x:Static lang:Resources.RemoteSourceView_SearchBoxText}"/>
                    <TextBox x:Name="SearchTextBox" Width="200"
                             FontSize="14" VerticalAlignment="Center"
                             mah:TextBoxHelper.ButtonCommand="{commands:DataContextCommandAdapter LoadPackages, CanLoadRemotePackages}"
                             Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}"
                             Style="{DynamicResource SearchMetroTextBox}">
                        <TextBox.InputBindings>
                            <KeyBinding Command="{commands:DataContextCommandAdapter LoadPackages, CanLoadRemotePackages}"
                                        Key="Return" />
                        </TextBox.InputBindings>
                    </TextBox>
                </StackPanel>
                <CheckBox Name="AllVersionsCheckBox" Margin="5"
                          Content="{x:Static lang:Resources.RemoteSourceView_CheckboxAllVersions}"
                          IsChecked="{Binding IncludeAllVersions}" />
                <CheckBox Name="PrereleaseCheckBox" Margin="5"
                          Content="{x:Static lang:Resources.RemoteSourceView_CheckboxIncludePrerelease}"
                          IsChecked="{Binding IncludePrerelease}" />
                <CheckBox Name="MatchCheckBox" Margin="5"
                          Content="{x:Static lang:Resources.RemoteSourceView_CheckboxMatchExactly}"
                          IsChecked="{Binding MatchWord}" />
                <ComboBox Name="SortBox" Margin="5 1" ItemsSource="{Binding SortOptions}" SelectedValue="{Binding SortSelection}"/>
            </WrapPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10,6">
                <Button Command="{commands:DataContextCommandAdapter RefreshRemotePackages, CanLoadRemotePackages}"
                        ToolTipService.ShowOnDisabled="True"
                        VerticalAlignment="Center"
                        Style="{DynamicResource IconFlatButtonStyle}"
                        ToolTip="{x:Static lang:Resources.RemoteSourceView_ButtonRefreshPkgs}"
                        Margin="0,0,2,0">
                    <iconPacks:PackIconFontAwesome Kind="Refresh" />
                </Button>
                <RadioButton Margin="6,0,1,0"
                             Style="{DynamicResource ListViewModeRadioButtonStyle}"
                             IsChecked="{Binding ListViewMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static enums:ListViewMode.Standard}}"
                             ToolTip="{x:Static lang:Resources.RemoteSourceView_ButtonListView}">
                    <iconPacks:PackIconModern Kind="TextAlignJustify" />
                </RadioButton>
                <RadioButton Margin="1,0,0,0"
                             Style="{DynamicResource ListViewModeRadioButtonStyle}"
                             IsChecked="{Binding ListViewMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static enums:ListViewMode.Tile}}"
                             ToolTip="{x:Static lang:Resources.RemoteSourceView_ButtonTileView}">
                    <iconPacks:PackIconModern Kind="TilesFour" />
                </RadioButton>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2" Margin="4" Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonCol" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonCol" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonCol" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="ButtonCol" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Name="FirstPage" Content="{x:Static lang:Resources.RemoteSourceView_ButtonGotoFirstPage}" AutomationProperties.Name="Go to First Page" ToolTip="First"
                    Command="{commands:DataContextCommandAdapter Executed=GoToFirst, CanExecute=CanGoToFirst}"
                    Style="{DynamicResource PaginationButtonStyle}"/>
            <Button Grid.Column="1" Name="BackPage" Content="{x:Static lang:Resources.RemoteSourceView_ButtonGoBackAPage}" AutomationProperties.Name="Go Back a Page" ToolTip="Back"
                    Command="{commands:DataContextCommandAdapter Executed=GoToPrevious, CanExecute=CanGoToPrevious}"
                    Style="{DynamicResource PaginationButtonStyle}"/>
            <TextBlock Grid.Column="2" Name="CurrentPage" AutomationProperties.Name="Current Page"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Style="{StaticResource PageCountTextStyle}">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}{0} / {1}">
                        <Binding Path="CurrentPage" Mode="OneWay" />
                        <Binding Path="PageCount" Mode="OneWay" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <Button Grid.Column="3" Name="ForwardPage" Content="{x:Static lang:Resources.RemoteSourceView_ButtonGoForwardAPage}" AutomationProperties.Name="Go Forward a Page" ToolTip="Forward"
                    Command="{commands:DataContextCommandAdapter Executed=GoToNext, CanExecute=CanGoToNext}"
                    Style="{DynamicResource PaginationButtonStyle}"/>
            <Button Grid.Column="4" Name="LastPage" Content="{x:Static lang:Resources.RemoteSourceView_ButtonGotoLastPage}" AutomationProperties.Name="Go to Last Page" ToolTip="Last"
                    Command="{commands:DataContextCommandAdapter Executed=GoToLast, CanExecute=CanGoToLast}"
                    Style="{DynamicResource PaginationButtonStyle}"/>
        </Grid>

        <ListView Grid.Row="1" x:Name="Packages" ItemsSource="{Binding Packages, Mode=OneWay}"
                  VerticalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.IsDeferredScrollingEnabled="False"
                  MouseDoubleClick="Packages_OnMouseDoubleClick" />
    </Grid>
</UserControl>