<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:items="clr-namespace:ChocolateyGui.ViewModels.Items"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:custom="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:converters="clr-namespace:ChocolateyGui.Utilities.Converters"
                    xmlns:commands="clr-namespace:ChocolateyGui.Commands"
                    xmlns:utilities="clr-namespace:ChocolateyGui.Utilities"
                    xmlns:app="clr-namespace:ChocolateyGui"
                    xmlns:lang="clr-namespace:ChocolateyGui.Properties"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ControlStyles/Typography.xaml" />
        <ResourceDictionary Source="ControlStyles/Flyout.xaml" />
        <ResourceDictionary Source="ControlStyles/Dialog.xaml" />
        <ResourceDictionary Source="ControlStyles/SourceList.xaml" />
        <ResourceDictionary Source="ControlStyles/ToggleSwitch.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToVisibility x:Key="BooleanToVisibility" />
    <converters:BooleanToTickString x:Key="BooleanToTickString" />
    <converters:StringListToString x:Key="StringListToString" />
    <converters:BooleanInverter x:Key="BooleanInverter" />

    <Style x:Key="UacIconStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{x:Static utilities:NativeMethods.UacIcon}"/>
        <Setter Property="Visibility" Value="{Binding Path=IsElevated, Source={x:Static app:Elevation.Instance}, Converter={StaticResource BooleanToVisibility}, ConverterParameter=True}"/>
    </Style>

    <Image x:Key="UacIcon" x:Shared="False"
          Style="{StaticResource UacIconStyle}"
          Width="16" Height="16"/>

    <Style x:Key="PrimaryUacIconStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{x:Static utilities:NativeMethods.UacIcon}"/>
        <Setter Property="Visibility" Value="{Binding Path=CanDoCentralActions, Source={x:Static app:Elevation.Instance}, Converter={StaticResource BooleanToVisibility}, ConverterParameter=True}"/>
    </Style>

    <Image x:Key="PrimaryUacIcon" x:Shared="False"
          Style="{StaticResource PrimaryUacIconStyle}"
          Width="16" Height="16"/>

    <Style x:Key="TertiaryUacIconStyle" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{x:Static utilities:NativeMethods.UacIcon}"/>
        <Setter Property="Visibility" Value="{Binding Path=CanDoTertiaryActions, Source={x:Static app:Elevation.Instance}, Converter={StaticResource BooleanToVisibility}, ConverterParameter=True}"/>
    </Style>

    <Image x:Key="TertiaryUacIcon" x:Shared="False"
          Style="{StaticResource TertiaryUacIconStyle}"
          Width="16" Height="16"/>

    <system:Double x:Key="ToggleSwitchFontSize">15</system:Double>

    <Style x:Key="SourceBaseTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="./Resources/#SourceSansPro-Regular" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="SouceItemTextBlockStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource SourceBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="VersionNumberTextBlockStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource SourceBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="SourcesListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="BorderThickness" Value="2,0,0,0" />
        <Setter Property="Padding" Value="20,10" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush3}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WhiteBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="ListViewItemTileStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush4}" />
    </Style>

    <ControlTemplate x:Key="TileOverlayTemplate" TargetType="ContentControl">
        <Grid ClipToBounds="True">
            <Grid Height="20" Width="200">
                <Grid.RenderTransform>
                    <TranslateTransform X="55" Y="-55" />
                </Grid.RenderTransform>
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="45" />
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Rectangle Fill="{TemplateBinding Background}" />
                <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                           Foreground="{TemplateBinding Foreground}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ListViewModeRadioButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource FlatButtonFontSize}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush4}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource FlatButtonPressedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PackageResourceLabel" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0,0,5,2" />
    </Style>

    <Style x:Key="PackageResourceValue" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="5,0,0,7" />
    </Style>

    <Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="48" />
        <Setter Property="Margin" Value="3,0,0,5" />
    </Style>

    <Style x:Key="SubtitleTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="3,0,0,10" />
    </Style>

    <Style x:Key="SubtitleRunTextStyle" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{StaticResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="22" />
    </Style>

    <Style x:Key="SectionHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="3,0,0,3" />
    </Style>

    <Style x:Key="DescriptionTextStyle" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{StaticResource BodyColorBrush}" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="PageCountTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource IdealForegroundColorBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="#FF34a1fe" />
    </Style>

    <Style TargetType="{x:Type FlowDocument}" x:Key="DocumentStyle">
        <Setter Property="FontFamily"
                Value="Calibri" />
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="Foreground" Value="#FF000000" />
    </Style>

    <Style x:Key="PageHeader"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="42" />
        <Setter Property="Foreground"
                Value="#ff000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="SubHeader"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Foreground"
                Value="#ff000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="SubHeaderSecondary"
           TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Foreground"
                Value="#99000000" />
        <Setter Property="FontWeight"
                Value="Light" />
    </Style>

    <Style x:Key="PageTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Margin" Value="5,0,5,5" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="EntypoIconStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="/Resources/#Entypo" />
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Margin" Value="0,-15,0,0" />
    </Style>

    <Style x:Key="EntypoIconLargeStyle" BasedOn="{StaticResource EntypoIconStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="58" />
    </Style>

    <Style x:Key="BigEntypeIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="60" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
    </Style>

    <Style x:Key="BigIconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}">
        <Setter Property="Width" Value="55" />
        <Setter Property="Height" Value="55" />
        <Setter Property="Margin" Value="7" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
    </Style>

    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BigIconButton}">
        <Setter Property="Content">
            <Setter.Value>
                <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" Margin="0,0,2,0">
                    <!--Chevron Left-->
                    <Path Width="16" Height="18" Canvas.Left="15.9063" Canvas.Top="14.75" Stretch="Fill"
                          Fill="{DynamicResource AccentColorBrush}"
                          Data="F1 M 22.6563,23.75L 24.6563,25.75L 31.9063,32.75L 25.4063,32.75L 15.9063,23.75L 25.4063,14.75L 31.9063,14.75L 24.6563,21.75L 22.6563,23.75 Z " />
                </Canvas>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="AutomationProperties.Name" Value="Back" />
        <Setter Property="AutomationProperties.HelpText" Value="Go's back" />
        <Setter Property="AutomationProperties.AcceleratorKey" Value="B" />
        <Setter Property="ToolTip" Value="Back" />
    </Style>

    <Style x:Key="IconFlatButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroFlatButton}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PaginationButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}" />
        <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="Margin" Value="3,0" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False" Opacity="0" />
                        <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource AccentColorBrush4}" Opacity="0" />
                        <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource AccentColorBrush3}" Opacity="0" />
                        <Rectangle x:Name="FocusRectangle" Margin="-1" Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle" Opacity="0"
                                   Stroke="{DynamicResource ButtonMouseOverBorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content, Converter={custom:ToUpperConverter}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="PackagesContextMenu"
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                 d:DataContext="{d:DesignInstance Type=items:PackageViewModel}">
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuInstall}" Icon="{StaticResource PrimaryUacIcon}"
                  Visibility="{Binding IsInstalled, Converter={StaticResource BooleanToVisibility}, ConverterParameter=True}"
                  Command="{commands:DataContextCommandAdapter Install}" />
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuPin}" Icon="{StaticResource TertiaryUacIcon}"
                  Command="{commands:DataContextCommandAdapter Pin}">
            <MenuItem.Visibility>
                <MultiBinding Converter="{StaticResource BooleanToVisibility}">
                    <Binding Path="IsInstalled" Mode="OneWay"/>
                    <Binding Path="IsPinned" Converter="{StaticResource BooleanInverter}" Mode="OneWay"/>
                </MultiBinding>
            </MenuItem.Visibility>
        </MenuItem>
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuUnpin}" Icon="{StaticResource TertiaryUacIcon}"
                  Command="{commands:DataContextCommandAdapter Unpin}">
            <MenuItem.Visibility>
                <MultiBinding Converter="{StaticResource BooleanToVisibility}">
                    <Binding Path="IsInstalled" Mode="OneWay"/>
                    <Binding Path="IsPinned" Mode="OneWay"/>
                </MultiBinding>
            </MenuItem.Visibility>
        </MenuItem>
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuUninstall}" Icon="{StaticResource PrimaryUacIcon}"
                  Visibility="{Binding IsInstalled, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Uninstall}" />
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuReinstall}" Icon="{StaticResource PrimaryUacIcon}"
                  Visibility="{Binding IsInstalled, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Reinstall}" />
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuUpdate}" Icon="{StaticResource PrimaryUacIcon}"
                  Visibility="{Binding CanUpdate, Converter={StaticResource BooleanToVisibility}}"
                  Command="{commands:DataContextCommandAdapter Update}" />
        <MenuItem Header="{x:Static lang:Resources.Controls_PackagesContextMenuDetails}" Command="{commands:DataContextCommandAdapter ViewDetails}" />
    </ContextMenu>

    <Style x:Key="PackagesGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="MinHeight" Value="25" />
                    <Setter Property="Foreground" Value="{StaticResource BlackBrush}" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Padding" Value="10,4,4,7" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColorBrush4}" />
                    <Setter Property="Background" Value="{StaticResource AccentColorBrush2}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="BackgroundBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,0,0,3" Background="{TemplateBinding Background}"
                                            Grid.ColumnSpan="2" />
                                    <ContentPresenter x:Name="HeaderContent"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Path x:Name="SortArrow" Grid.Column="1" Fill="White" Height="10" Margin="0,0,8,2"
                                          RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed"
                                          VerticalAlignment="Center" Width="8" />
                                    <Thumb x:Name="PART_LeftHeaderGripper" Background="Transparent"
                                           HorizontalAlignment="Left" HorizontalContentAlignment="Left">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8" />
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}" />
                                                <Setter Property="Cursor" Value="SizeWE" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent"
                                                                    Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}"
                                                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                           Width="1" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right"
                                           HorizontalContentAlignment="Right">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8" />
                                                <Setter Property="Background" Value="{DynamicResource GrayBrush5}" />
                                                <Setter Property="Cursor" Value="SizeWE" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="Transparent"
                                                                    Padding="{TemplateBinding Padding}">
                                                                <Rectangle Fill="{TemplateBinding Background}"
                                                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                           Width="1" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter Property="Background" TargetName="BackgroundBorder"
                                                Value="{DynamicResource WhiteBrush}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="BackgroundBorder"
                                                Value="{DynamicResource GrayBrush8}" />
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible" />
                                        <Setter Property="Data" TargetName="SortArrow"
                                                Value="F1M34,57L42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57z" />
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter Property="Visibility" TargetName="SortArrow" Value="Visible" />
                                        <Setter Property="Data" TargetName="SortArrow"
                                                Value="F1M42,19.0002L34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002z" />
                                        <Setter Property="Margin" TargetName="SortArrow" Value="0,0,8,0" />
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" TargetName="PART_LeftHeaderGripper"
                                                Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock FontWeight="SemiBold" Text="{Binding Converter={custom:ToUpperConverter}}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="#FFCCFFCC" />
                    <Setter Property="BorderThickness" Value="0,0,1,0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                                <Grid>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}"
                                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <StackPanel Orientation="Horizontal">
                                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Content="{TemplateBinding Content}"
                                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="Center" />
                                        </StackPanel>
                                    </Border>
                                    <Thumb x:Name="PART_TopHeaderGripper" Height="3" VerticalAlignment="Top">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Cursor" Value="SizeNS" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    SnapsToDevicePixels="True" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                    <Thumb x:Name="PART_BottomHeaderGripper" Height="3" VerticalAlignment="Bottom">
                                        <Thumb.Style>
                                            <Style TargetType="{x:Type Thumb}">
                                                <Setter Property="Width" Value="8" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Cursor" Value="SizeNS" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Border Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    SnapsToDevicePixels="True" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource AccentColorBrush3}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Foreground" Value="#FF000000" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    <Setter Property="MinHeight" Value="25" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="ContextMenu" Value="{StaticResource PackagesContextMenu}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLatestVersion}" Value="False">
                            <Setter Property="Background" Value="#ffffe6"/>
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush3}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource AccentColorBrush2}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Separator}">
                    <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                    <Setter Property="Width" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="ApplicationCommands.SelectAll" Focusable="False"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}">
                                            <Button.Visibility>
                                                <Binding Path="HeadersVisibility"
                                                         RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>All</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility"
                                                         RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <Grid Grid.ColumnSpan="2" Grid.Row="1">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    CanHorizontallyScroll="False" Grid.ColumnSpan="2"
                                                                    CanVerticallyScroll="False"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" />
                                        </Grid>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                                   Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RowBackground" Value="{DynamicResource LightBackgroundColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>